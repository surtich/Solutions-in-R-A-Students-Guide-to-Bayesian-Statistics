names_transform = ~factor(as,integer(gsub("X(\\d+)", "\\1", .x)))
) #|> ggplot() +
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr",
names_transform = ~factor(as.integer(gsub("X(\\d+)", "\\1", .x)))
) #|> ggplot() +
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) #|> ggplot() +
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_histogram(aes(x=N, y=`Pr(N)`))
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`))
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N))
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme(legeng = NULL)
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme(legend.position = "none")
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme(legend.position = "none") +
theme_classic()
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme_classic() +
theme(legend.position = "none")
#| echo: false
lPrN <- extract(fit16.5)$pState
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme_classic() +
theme(legend.position = "none")
fit16.4
#| echo: false
X <- c(4,18,6,4,5,6,4,6,16,7)
dataList = list(
nStudy = length(X),
N = 20,
X =  X
)
if (!file.exists("../fits/16.4.rds")) {
fit16.4 <- readRDS("../fits/16.4.rds")
} else {
fit16.4 <- rstan::sampling(
model16.4, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.4.rds"
)
saveRDS(fit, file = "../fits/16.4.rds")
}
fit16.4
#| echo: false
if (file.exists("../fits/16.1.6.rds")) {
fit <- readRDS("../fits/16.1.6.rds")
} else {
fit <- rstan::sampling(
model, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.1.6.rds"
)
saveRDS(fit, file = "../fits/16.1.6.rds")
}
model
rm(model)
model
#| echo: false
if (file.exists("../fits/16.1.6.rds")) {
fit <- readRDS("../fits/16.1.6.rds")
} else {
fit <- rstan::sampling(
model, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.1.6.rds"
)
saveRDS(fit, file = "../fits/16.1.6.rds")
}
fExpectation <- function(mStates){
lN <- apply(mStates, 1, function(x) sum(x * seq(11, 20)))
return(lN)
}
lExpectedN <- fExpectation(lPrN)
lExpectedN
tibble(N=lExpectedN)
tibble(N=lExpectedN, time=n())
tibble(N=lExpectedN) |>
mutate(time=n())
tibble(N=lExpectedN) |>
mutate(time=row_number())
tibble(N=lExpectedN) |>
mutate(time=row_number()) |>
ggplot() +
geom_line(aes(x=time, y=N), color="lightblue") +
theme_classic()
tibble(N=fRunningMean(lExpectedN)) |>
mutate(time=row_number()) |>
ggplot() +
geom_line(aes(x=time, y=N), color="lightblue") +
theme_classic()
fRunningMean <- function(lSample){
return(cumsum(lSample) / seq_along(lSample))
}
tibble(N=fRunningMean(lExpectedN)) |>
mutate(time=row_number()) |>
ggplot() +
geom_line(aes(x=time, y=N), color="lightblue") +
theme_classic()
model16.4
fit16.4
#| echo: false
X <- c(4,18,6,4,5,6,4,6,16,7)
dataList = list(
nStudy = length(X),
N = 20,
X =  X
)
if (file.exists("../fits/16.4.rds")) {
fit16.4 <- readRDS("../fits/16.4.rds")
} else {
fit16.4 <- rstan::sampling(
model16.4, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.4.rds"
)
saveRDS(fit, file = "../fits/16.4.rds")
}
#| echo: false
tidy(fit16.4, pars=c("pstate")) |>
select(-std.error) |>
mutate(
subject = as.integer(gsub("pstate\\[(\\d+),\\d+\\]", "\\1", term)),
tumour = ifelse(grepl("pstate\\[\\d+,1\\]", term), "benign", "malignant")
) |>
pivot_wider(
id_cols=subject,
names_from = tumour,
values_from = estimate,
names_prefix = "prob_"
) |> gt() |>
fmt_number(decimals = 2, columns = -subject)
fit16.4
#| echo: false
X <- c(4,18,6,4,5,6,4,6,16,7)
dataList = list(
nStudy = length(X),
N = 20,
X =  X
)
if (file.exists("../fits/16.4.rds")) {
fit16.4 <- readRDS("../fits/16.4.rds")
} else {
fit16.4 <- rstan::sampling(
model16.4, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.4.rds"
)
saveRDS(fit, file = "../fits/16.4.rds")
}
#| echo: false
tidy(fit16.4, pars=c("pstate")) |>
select(-std.error) |>
mutate(
subject = as.integer(gsub("pstate\\[(\\d+),\\d+\\]", "\\1", term)),
tumour = ifelse(grepl("pstate\\[\\d+,1\\]", term), "benign", "malignant")
) |>
pivot_wider(
id_cols=subject,
names_from = tumour,
values_from = estimate,
names_prefix = "prob_"
) |> gt() |>
fmt_number(decimals = 2, columns = -subject)
#| echo: false
X <- c(4,18,6,4,5,6,4,6,16,7)
dataList = list(
nStudy = length(X),
N = 20,
X =  X
)
if (!file.exists("../fits/16.4.rds")) {
fit16.4 <- readRDS("../fits/16.4.rds")
} else {
fit16.4 <- rstan::sampling(
model16.4, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.4.rds"
)
saveRDS(fit, file = "../fits/16.4.rds")
}
fit16.4
#| echo: false
tidy(fit16.4, pars=c("pstate")) |>
select(-std.error) |>
mutate(
subject = as.integer(gsub("pstate\\[(\\d+),\\d+\\]", "\\1", term)),
tumour = ifelse(grepl("pstate\\[\\d+,1\\]", term), "benign", "malignant")
) |>
pivot_wider(
id_cols=subject,
names_from = tumour,
values_from = estimate,
names_prefix = "prob_"
) |> gt() |>
fmt_number(decimals = 2, columns = -subject)
fit16.4
fit16.4 <- readRDS("../fits/16.4.rds")
fit16.4
data.frame(X=X) |> ggplot() +
geom_density(aes(x=X, color="real"), linewidth=1) +
geom_density(
data=data.frame(
t(lXSim[sample(1:nrow(lXSim), 20),])
) |>
pivot_longer(cols=everything(),names_to=".sample", values_to="X"),
aes(x=X, group=.sample, color="simulated"), linewidth=.1) +
scale_x_continuous(breaks=0:15) +
theme_classic()
data.frame(X=X) |> ggplot() +
geom_density(aes(x=X, color="real"), linewidth=1) +
geom_density(
data=data.frame(
t(lXSimNB[sample(1:nrow(lXSimNB), 20),])
) |>
pivot_longer(cols=everything(),names_to=".sample", values_to="X"),
aes(x=X, group=.sample, color="simulated"), linewidth=.1) +
scale_x_continuous(breaks=0:15) +
theme_classic()
#| echo: false
lPrN <- extract(fit16.5)$pState
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme_classic() +
theme(legend.position = "none")
data.frame(X=X) |> ggplot() +
geom_density(aes(x=X, color="real"), linewidth=1) +
geom_density(
data=data.frame(
t(lXSim[sample(1:nrow(lXSim), 20),])
) |>
pivot_longer(cols=everything(),names_to=".sample", values_to="X"),
aes(x=X, group=.sample, color="simulated"), linewidth=.1) +
scale_x_continuous(breaks=0:15) +
theme_classic()
#| echo: false
Y <- c(9,7,11,10,10,9,8,11,9,11)
dataList = list(
K = length(Y),
Y = Y
)
if (file.exists("../fits/16.5.rds")) {
fit16.5 <- readRDS("../fits/16.5.rds")
} else {
fit16.5 <- rstan::sampling(
model16.5, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.5.rds"
)
saveRDS(fit, file = "../fits/16.5.rds")
}
#| echo: false
Y <- c(9,7,11,10,10,9,8,11,9,11)
dataList = list(
K = length(Y),
Y = Y
)
if (file.exists("../fits/16.5.rds")) {
fit16.5 <- readRDS("../fits/16.5.rds")
} else {
fit16.5 <- rstan::sampling(
model16.5, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.5.rds"
)
saveRDS(fit, file = "../fits/16.5.rds")
}
#| echo: false
Y <- c(9,7,11,10,10,9,8,11,9,11)
dataList = list(
K = length(Y),
Y = Y
)
if (file.exists("../fits/16.5.rds")) {
fit16.5 <- readRDS("../fits/16.5.rds")
} else {
fit16.5 <- rstan::sampling(
model16.5, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.5.rds"
)
saveRDS(fit16.5, file = "../fits/16.5.rds")
}
#| echo: false
lPrN <- extract(fit16.5)$pState
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = function(x) {factor(10+as.integer(gsub("X(\\d+)", "\\1", x)))}
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme_classic() +
theme(legend.position = "none")
#| echo: false
lPrN <- extract(fit16.5)$pState
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme_classic() +
theme(legend.position = "none")
lPrN
lPrN <- extract(fit16.5)$pState
lPrN
#| echo: false
Y <- c(9,7,11,10,10,9,8,11,9,11)
dataList = list(
K = length(Y),
Y = Y
)
if (file.exists("../fits/16.5.rds")) {
fit16.5 <- readRDS("../fits/16.5.rds")
} else {
fit16.5 <- rstan::sampling(
model16.5, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.5.rds"
)
saveRDS(fit16.5, file = "../fits/16.5.rds")
}
lPrN <- extract(fit16.5)$pState
lPrN
#| echo: false
Y <- c(9,7,11,10,10,9,8,11,9,11)
dataList = list(
K = length(Y),
Y = Y
)
if (file.exists("../fits/16.5.rds")) {
fit16.5 <- readRDS("../fits/16.5.rds")
} else {
fit16.5 <- rstan::sampling(
model16.5, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.5.rds"
)
saveRDS(fit16.5, file = "../fits/16.5.rds")
}
lPrN <- extract(fit16.5)$pState
data.frame(lPrN) |>
pivot_longer(
cols=everything(),
names_to = "N",
values_to = "Pr(N)",
names_transform = ~factor(10+as.integer(gsub("X(\\d+)", "\\1", .x)))
) |>
ggplot() +
geom_boxplot(aes(x=N, y=`Pr(N)`, color=N)) +
theme_classic() +
theme(legend.position = "none")
data.frame(X=X) |> ggplot() +
geom_density(aes(x=X, color="real"), linewidth=1) +
geom_density(
data=data.frame(
t(lXSimNB[sample(1:nrow(lXSimNB), 20),])
) |>
pivot_longer(cols=everything(),names_to=".sample", values_to="X"),
aes(x=X, group=.sample, color="simulated"), linewidth=.1) +
scale_x_continuous(breaks=0:15) +
theme_classic()
#| echo: false
dataList = list(
N = nrow(df),
Volume =  df$volume,
Holiday = df$holiday
)
if (file.exists("../fits/16.2.rds")) {
fit16.2 <- readRDS("../fits/16.2.rds")
} else {
fit16.2 <- rstan::sampling(
model16.2, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.2.rds"
)
saveRDS(fit16.2, file = "../fits/16.2.rds")
}
tidy(fit16.2, conf.int = TRUE, conf.level = .5, rhat=TRUE, ess=TRUE) |>
select(-std.error) |>
gt() |> fmt_number(columns=-ess, decimals = 2)
#| echo: false
dataList = list(
N = nrow(df),
Volume =  df$volume,
Holiday = df$holiday
)
if (file.exists("../fits/16.2.rds")) {
fit16.2 <- readRDS("../fits/16.2.rds")
} else {
fit16.2 <- rstan::sampling(
model16.2, data=dataList,
iter=1000,
chains=4,
seed=1,
sample_file = "../fits/16.2.rds"
)
saveRDS(fit16.2, file = "../fits/16.2.rds")
}
tidy(fit16.2, conf.int = TRUE, conf.level = .5, rhat=TRUE, ess=TRUE) |>
select(-std.error) |>
gt() |> fmt_number(columns=-ess, decimals = 2)
