theme_classic()
?geom_histogram
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(-0.5,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
theme_classic()
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(-0.5,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25))
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25))
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
theme_classic()
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_x_continuous(minor_breaks = seq(0,30,.25)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,.25)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
#geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), binwidth = 0.5, fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), breaks = seq(0,5, by = .5), fill="orange", color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), breaks = seq(0,5, by = .5), fill="orange", color="black", alpha=1) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times), fill="blue", color="black", breaks = seq(0,5, by = .5)) +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times), breaks = seq(0,5, by = .5), fill="orange", color="black", alpha=.6) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real") +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="model generated"), breaks = seq(0,5, by = .5), color="black", alpha=.6) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real") +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="model generated"), breaks = seq(0,5, by = .5), color="black", alpha=.6) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "model generated" = "red"))
ggplot() +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real") +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="model generated"), breaks = seq(0,5, by = .5), color="black", alpha=.6) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "model generated" = "orange")) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real") +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="model generated"), breaks = seq(0,5, by = .5), color="black") +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "model generated" = "orange")) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="model generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real") +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "model generated" = "orange")) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="model generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.8) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "model generated" = "orange")) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.8) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
ggplot() +
geom_histogram(data=data.frame(times=rexp(100,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.8) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
lambda_hat
#| label: fig-visits-hist
#| fig-cap: "Real and fake data simulated from the exponential model using the maximum likelihood estimates of the parameter."
#| echo: false
ggplot() +
geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.8) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
#| label: fig-visits-hist
#| fig-cap: "Real and fake data simulated from the exponential model using the maximum likelihood estimates of the parameter."
#| echo: false
ggplot() +
geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
#| label: fig-visits-hist
#| fig-cap: "Real and fake data simulated from the exponential model using the maximum likelihood estimates of the parameter."
#| echo: false
ggplot() +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real") +
geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
#| label: fig-visits-hist
#| fig-cap: "Real and fake data simulated from the exponential model using the maximum likelihood estimates of the parameter."
#| echo: false
ggplot() +
geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
#| label: fig-visits-hist
#| fig-cap: "Real and fake data simulated from the exponential model using the maximum likelihood estimates of the parameter."
#| echo: false
ggplot() +
geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=times, fill="real"), color="black", breaks = seq(0,5, by = .5), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,5,1), limits=c(0,5), minor_breaks = seq(0,5,.25)) +
scale_y_continuous(minor_breaks = seq(0,30,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
df <- read_csv('likelihood_NewYorkCrimeUnemployment.csv')
df <- read_csv('../data/likelihood_NewYorkCrimeUnemployment.csv')
data
df
df |> ggplot() |>
gem_point(aes(x=Population, y=Violent_crime_count)) +
theme_classic()
df |> ggplot() |>
geom_point(aes(x=Population, y=Violent_crime_count)) +
theme_classic()
df |> ggplot() +
geom_point(aes(x=Population, y=Violent_crime_count)) +
theme_classic()
df |> ggplot() +
geom_point(aes(x=Population, y=Violent_crime_count), color="blue") +
theme_classic()
df
(theta_hat <- df |> summarize(theta_hat = mean(Violent_crime_count)/mean(Population)) |> pluck("theta_hat"))
df
df |> mutate(per_capita_crime_rate = Violent_crime_count / Population)
df
ggplot() +
# geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=per_capita_crime_rate, fill="real"), color="black", breaks = seq(0,1, by = .1), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,1,.2), limits=c(0,1), minor_breaks = seq(0,1,.05)) +
scale_y_continuous(minor_breaks = seq(0,55,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
df <- df |> mutate(per_capita_crime_rate = Violent_crime_count / Population)
ggplot() +
# geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=per_capita_crime_rate, fill="real"), color="black", breaks = seq(0,1, by = .1), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,1,.2), limits=c(0,1), minor_breaks = seq(0,1,.05)) +
scale_y_continuous(minor_breaks = seq(0,55,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
df <- df |> mutate(per_capita_crime_rate = Violent_crime_count / Population * 100)
ggplot() +
# geom_histogram(data=data.frame(times=rexp(50,rate=lambda_hat)), aes(x=times, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(data=df, aes(x=per_capita_crime_rate, fill="real"), color="black", breaks = seq(0,1, by = .1), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,1,.2), limits=c(0,1), minor_breaks = seq(0,1,.05)) +
scale_y_continuous(minor_breaks = seq(0,55,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
theta_hat
rpois(10, theta_hat)
rpois(10000, theta_hat)
theta_hat
sapply(df$Population, function x {x})
sapply(df$Population, function(x) {x})
sapply(df$Population, function(population) {rpois(1, theta_hat * population)})
sapply(df$Population, function(population) {rpois(1, theta_hat * population)})
df
sapply(df$Population, function(population) {rpois(1, theta_hat * population)})
sapply(df$Population, function(population) {rpois(1, theta_hat * population)/population*100})
df <- df |> mutate(per_capita_crime_rate = Violent_crime_count / Population * 100)
df$generated <- per_capita_crime_rate=sapply(df$Population, function(population) {rpois(1, theta_hat * population)/population*100})
df$generated <- sapply(df$Population, function(population) {rpois(1, theta_hat * population)/population*100})
df <- df |> mutate( = Violent_crime_count / Population * 100)
df <- df |> mutate(per_capita_crime_rate = Violent_crime_count / Population * 100)
df$generated_per_capita_crime_rate <- sapply(df$Population, function(population) {rpois(1, theta_hat * population)/population*100})
df |> ggplot() +
geom_histogram(aes(x=generated_per_capita_crime_rate, fill="generated"), breaks = seq(0,5, by = .5), color="black") +
geom_histogram(aes(x=per_capita_crime_rate, fill="real"), color="black", breaks = seq(0,1, by = .1), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,1,.2), limits=c(0,1), minor_breaks = seq(0,1,.05)) +
scale_y_continuous(minor_breaks = seq(0,55,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
df |> ggplot() +
geom_histogram(aes(x=generated_per_capita_crime_rate, fill="generated"), breaks = seq(0,1, by = .1), color="black") +
geom_histogram(aes(x=per_capita_crime_rate, fill="real"), color="black", breaks = seq(0,1, by = .1), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,1,.2), limits=c(0,1), minor_breaks = seq(0,1,.05)) +
scale_y_continuous(minor_breaks = seq(0,55,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Exponential model generated")) +
labs(x="time interval between visits, minutes", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
df |> ggplot() +
geom_histogram(aes(x=generated_per_capita_crime_rate, fill="generated"), breaks = seq(0,1, by = .1), color="black") +
geom_histogram(aes(x=per_capita_crime_rate, fill="real"), color="black", breaks = seq(0,1, by = .1), group ="real", alpha=0.4) +
scale_x_continuous(breaks = seq(0,1,.2), limits=c(0,1), minor_breaks = seq(0,1,.05)) +
scale_y_continuous(minor_breaks = seq(0,55,1)) +
scale_fill_manual(name = "",
values = c("real" = "blue", "generated" = "orange"),
labels = c("real" = "Real", "generated" = "Possion model generated")) +
labs(x="per capita crime rate, %", y="frequency") +
theme_classic() +
guides(
x = guide_axis(minor.ticks = TRUE),
y = guide_axis(minor.ticks = TRUE)
)
?dnbinom
?optimize
?optim
?logLik
?dnbinom
dnbinom(12,mu=12,size=3)
df$per_capita_crime_rate[1]
df
logLik <- function(mu, size) {
sum(dnbinom(df$per_capita_crime_rate,mu,size, log=TRUE))
}
logLik(1,1)
dnbinom(c(1,1),1,1, log=TRUE)
dnbinom(c(1,1),.1,1, log=TRUE)
dnbinom(c(1,1),.1,.1, log=TRUE)
dnbinom(c(1,1),.1,0, log=TRUE)
dnbinom(c(1,1),.1,0.1, log=TRUE)
logLik <- function(mu, size) {
sum(dnbinom(df$per_capita_crime_rate,mu,size, log=TRUE))
}
logLik(.1,.1)
dnbinom(c(.1,.1),.1,0.1, log=TRUE)
dnbinom(c(1,1),.1,0.1, log=TRUE)
dnbinom(c(10,11),.1,0.1, log=TRUE)
dnbinom(c(20,11),.1,0.1, log=TRUE)
dnbinom(c(20,11000),.1,0.1, log=TRUE)
dnbinom(c(2000,11000),.1,0.1, log=TRUE)
df
dnbinom(c(.1,.1),.1,0.1, log=TRUE)
dnbinom(c(.1,.1),1,0.1, log=TRUE)
dnbinom(c(.1,.1),1,1, log=TRUE)
dnbinom(c(.1,.1),.01,.01, log=TRUE)
dnbinom(c(.1,.3),.01,.01, log=TRUE)
dnbinom(c(.1,.3),.001,.01, log=TRUE)
dnbinom(c(.1,.3),.001,.001, log=TRUE)
dnbinom(c(.1,.3),.001,1, log=TRUE)
dnbinom(c(.1,.3),100,1, log=TRUE)
dnbinom(c(.1,.3),1000,1, log=TRUE)
dnbinom(c(.1,.3),1000,12, log=TRUE)
dnbinom(c(1,3),1000,12, log=TRUE)
dnbinom(c(1,3),.1,.1, log=TRUE)
df$Violent_crime_count
dnbinom(c(1,3),10,.1, log=TRUE)
dnbinom(c(1,3),1000,.1, log=TRUE)
logLik <- function(mu, size) {
sum <- 0
for (i in 1:nrow(df)) {
sum = sum + dnbinom(df$Violent_crime_count[i],mu*df$Population[i],size, log=TRUE)
}
sum
}
logLik(.1,.1)
?optim
logLik <- function(x) {
mu <- x[1]
size <- x[2]
sum <- 0
for (i in 1:nrow(df)) {
sum = sum + dnbinom(df$Violent_crime_count[i],mu*df$Population[i],size, log=TRUE)
}
sum
}
logLik(.1,.1)
logLik(c(.1,.1))
optim(c(.1,.1), logLik)
?optimize
?optim
optim(c(.1,.1), logLik, lower=c(0,0), upper(1,1))
optim(c(.1,.1), logLik, lower=c(0,0), upper=(1,1))
optim(c(.1,.1), logLik, lower=c(0,0), upper=c(1,1))
gt_fmt <- function(.data) {
.data |> gt() |>
tab_spanner(label = "Height adove table (m)", starts_with("height_"), level = 1, id = "height") |>
cols_label(angle = "Angle (degrees)") |>
cols_label_with(starts_with("height_"), fn= ~ gsub("height_", "", .)) |>
cols_align(
align = "left",
columns = "angle"
) |>
cols_align(
align = "center",
columns = starts_with("height_")
) |>
tab_style(
style = list(
cell_fill(color = "#FFDFD4")
),
locations = cells_body(
rows = seq(1, nrow(.data), 2)
)
) |>
tab_style(
style = list(
cell_fill(color = "#F8E8E4")
),
locations = cells_body(
rows = seq(2, nrow(.data), 2)
)
) |>
tab_options(
table.border.top.color = "white",
table.border.bottom.color = "white",
table_body.hlines.color = "white",
table_body.vlines.color = "white",
table_body.border.bottom.color = "white",
heading.border.bottom.color = "white",
column_labels.border.top.color = "white",
column_labels.border.bottom.color = "white",
row_group.border.top.color = "white",
row_group.border.bottom.color = "white"
)
}
